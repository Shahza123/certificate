# Generated by Django 5.2.6 on 2025-09-11 12:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('certificates', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='certificate',
            name='auto_renewal',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='certificate',
            name='common_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='country',
            field=models.CharField(blank=True, max_length=2, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='csr_content',
            field=models.TextField(blank=True, help_text='Certificate Signing Request in PEM format', null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='deployment_status',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='deployment_targets',
            field=models.JSONField(blank=True, default=list, help_text='List of deployment targets'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='fingerprint_sha256',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='key_type',
            field=models.CharField(choices=[('RSA', 'RSA'), ('ECDSA', 'ECDSA'), ('Ed25519', 'Ed25519')], default='RSA', max_length=10),
        ),
        migrations.AddField(
            model_name='certificate',
            name='last_deployment_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='locality',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='organization',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='organizational_unit',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='previous_certificate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='renewed_certificates', to='certificates.certificate'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='renewal_threshold_days',
            field=models.IntegerField(default=30, help_text='Days before expiry to trigger renewal'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='serial_number',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='state',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='subject_alternative_names',
            field=models.JSONField(blank=True, default=list, help_text='List of SAN entries'),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='certificate_type',
            field=models.CharField(choices=[('self_signed', 'Self-Signed'), ('ca_signed', 'CA-Signed'), ('step_ca', 'Step-CA'), ('csr_based', 'CSR-Based')], default='step_ca', max_length=20),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('revoked', 'Revoked'), ('pending', 'Pending'), ('renewal_pending', 'Renewal Pending'), ('deployment_pending', 'Deployment Pending'), ('deployed', 'Deployed'), ('failed', 'Failed')], default='pending', max_length=20),
        ),
        migrations.CreateModel(
            name='CertificateSigningRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('csr_content', models.TextField(help_text='Certificate Signing Request in PEM format')),
                ('private_key', models.TextField(blank=True, help_text='Associated private key (optional)', null=True)),
                ('common_name', models.CharField(max_length=255)),
                ('subject_alternative_names', models.JSONField(blank=True, default=list)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('organizational_unit', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('locality', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('key_type', models.CharField(default='RSA', max_length=10)),
                ('key_size', models.CharField(default='2048', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('requested_validity', models.CharField(default='1-year', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('justification', models.TextField(blank=True, help_text='Reason for certificate request')),
                ('rejection_reason', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_csrs', to=settings.AUTH_USER_MODEL)),
                ('certificate', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='csr', to='certificates.certificate')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='csr_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CSRTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('country', models.CharField(default='US', max_length=2)),
                ('state', models.CharField(default='', max_length=255)),
                ('locality', models.CharField(default='', max_length=255)),
                ('organization', models.CharField(default='', max_length=255)),
                ('organizational_unit', models.CharField(default='IT Department', max_length=255)),
                ('key_type', models.CharField(choices=[('RSA', 'RSA'), ('ECDSA', 'ECDSA'), ('Ed25519', 'Ed25519')], default='RSA', max_length=10)),
                ('key_size', models.CharField(choices=[('2048', '2048'), ('4096', '4096'), ('8192', '8192')], default='2048', max_length=10)),
                ('default_validity', models.CharField(default='1-year', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeploymentTarget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('target_type', models.CharField(choices=[('ssh', 'SSH Server'), ('api', 'API Endpoint'), ('webhook', 'Webhook'), ('manual', 'Manual Download')], max_length=20)),
                ('hostname', models.CharField(max_length=255)),
                ('port', models.IntegerField(default=22)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('ssh_key_path', models.CharField(blank=True, help_text='Path to SSH private key', max_length=500)),
                ('remote_cert_path', models.CharField(blank=True, help_text='Remote path for certificate', max_length=500)),
                ('remote_key_path', models.CharField(blank=True, help_text='Remote path for private key', max_length=500)),
                ('post_deploy_command', models.TextField(blank=True, help_text='Command to run after deployment')),
                ('api_endpoint', models.URLField(blank=True)),
                ('api_token', models.CharField(blank=True, max_length=500)),
                ('api_headers', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('last_deployment', models.DateTimeField(blank=True, null=True)),
                ('last_deployment_status', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'created_by')},
            },
        ),
        migrations.CreateModel(
            name='CertificateDeployment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('deployment_log', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('backup_existing', models.BooleanField(default=True)),
                ('restart_services', models.BooleanField(default=False)),
                ('services_to_restart', models.JSONField(blank=True, default=list)),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployments', to='certificates.certificate')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='certificates.deploymenttarget')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(choices=[('expiry_30', 'Certificate Expires in 30 Days'), ('expiry_7', 'Certificate Expires in 7 Days'), ('expiry_1', 'Certificate Expires in 1 Day'), ('expired', 'Certificate Expired'), ('issued', 'Certificate Issued'), ('revoked', 'Certificate Revoked'), ('deployment_success', 'Deployment Successful'), ('deployment_failed', 'Deployment Failed'), ('csr_pending', 'CSR Pending Approval')], max_length=30)),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('webhook', 'Webhook'), ('api', 'API Call')], max_length=20)),
                ('recipients', models.JSONField(default=list, help_text='List of email addresses or webhook URLs')),
                ('certificate_types', models.JSONField(blank=True, default=list, help_text='Filter by certificate types')),
                ('hostnames', models.JSONField(blank=True, default=list, help_text='Filter by hostnames')),
                ('webhook_url', models.URLField(blank=True)),
                ('webhook_headers', models.JSONField(blank=True, default=dict)),
                ('webhook_payload_template', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
